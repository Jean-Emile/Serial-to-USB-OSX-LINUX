Copyright (C) 2012 JeD <jedartois@gmail.com>
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

REQUIREMENTS
--------------------------------------------------------------------------------------------
- Posix OS
--------------------------------------------------------------------------------------------


END USE EXAMPLE
----------------------------------------------------------------------------------------

        final ISerialPort serial = new SerialPort("/dev/ttyACM0", 115200);
        serial.open();


        serial.addEventListener(new SerialPortEventListener() {
            public void incomingDataEvent(SerialPortEvent evt)
            {
                System.out.println("event=" + evt.getSize() + "/" + new String(evt.read()));
            }

            public void disconnectionEvent(SerialPortDisconnectionEvent evt)
            {
                System.out.println("device " + serial.getPort_name() + " is not connected anymore ");

                try {
                    serial.autoReconnect(20, this);
                } catch (SerialPortException e) {
                }
            }
        });



------------------------------------------------------------------------------------------------
Serial-To-USB-Android Interface
------------------------------------------------------------------------------------------------
public interface ISerialPort {
    public abstract void open()throws SerialPortException;
    public abstract void close()throws SerialPortException;
    public abstract void write(byte[] data) throws SerialPortException, SerialPortException;
    public abstract boolean autoReconnect (int tentative,SerialPortEventListener event) throws SerialPortException;
    public abstract void addEventListener (SerialPortEventListener listener);
    public abstract void removeEventListener (SerialPortEventListener listener);
}




